// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int       @id @default(autoincrement()) // Chave primária
  email     String    @unique // E-mail único
  password  String // Hash da senha
  createdAt DateTime  @default(now()) // Data de criação
  updatedAt DateTime  @updatedAt // Atualizado automaticamente
  pets      Pet[] // Relacionamento com Pets
  Session   Session[]
}

model Pet {
  id        Int       @id @default(autoincrement()) // Chave primária
  name      String // Nome do pet
  species   String // Espécie do pet (cachorro, gato, etc.)
  breed     String? // Raça (opcional)
  birthDate DateTime? // Data de nascimento (opcional)
  ownerId   Int // Referência ao dono
  owner     User      @relation(fields: [ownerId], references: [id]) // Relacionamento com o usuário
  createdAt DateTime  @default(now()) // Data de criação
  updatedAt DateTime  @updatedAt // Atualizado automaticamente
}

model Session {
  id        String   @id @default(uuid()) // Chave primária (UUID)
  userId    Int // Relacionado ao usuário
  user      User     @relation(fields: [userId], references: [id]) // Relacionamento com o usuário
  token     String   @unique // Token único
  createdAt DateTime @default(now()) // Data de criação
  expiresAt DateTime // Data de expiração do token
}
